{"map":"{\"version\":3,\"sources\":[\"webpack/universalModuleDefinition\",\"webpack/bootstrap\",\"/home/ahmet/Documents/MasterProject/LocationBasedChatApp/src/LocationHelper.ts\",\"/home/ahmet/Documents/MasterProject/LocationBasedChatApp/src/Location.ts\",\"/home/ahmet/Documents/MasterProject/LocationBasedChatApp/src/index.ts\"],\"names\":[\"root\",\"factory\",\"exports\",\"module\",\"define\",\"amd\",\"window\",\"installedModules\",\"__webpack_require__\",\"moduleId\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"LocationHelper\",\"calculateLocationKeyMaterial\",\"latitude\",\"longitude\",\"toleranceDistance\",\"Error\",\"locationKeyMaterial\",\"this\",\"includeToleranceDistance\",\"console\",\"log\",\"isNorth\",\"isWest\",\"convertToDegreesDecimalMinutes\",\"Math\",\"floor\",\"includeLocationSignBits\",\"toString\",\"locationValue\",\"locationValueDegrees\",\"locationValueDecimal\",\"parseFloat\",\"toFixed\",\"substring\",\"isNorthOrWest\",\"firstBit\",\"createLocationMaterials\",\"leftLatitudeQuadrant\",\"rightLatitudeQuadrant\",\"leftLongitudeQuadrant\",\"rightLongitudeQuadrant\",\"quadrantsList\",\"Array\",\"center\",\"LocationHelper_1\",\"Location\",\"createLocationKeyMaterial\",\"createLocationKeyMaterials\",\"a\",\"start\",\"deneme\"],\"mappings\":\"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\",\"sourcesContent\":[\"(function webpackUniversalModuleDefinition(root, factory) {\\n\\tif(typeof exports === 'object' && typeof module === 'object')\\n\\t\\tmodule.exports = factory();\\n\\telse if(typeof define === 'function' && define.amd)\\n\\t\\tdefine(\\\"MyLib\\\", [], factory);\\n\\telse if(typeof exports === 'object')\\n\\t\\texports[\\\"MyLib\\\"] = factory();\\n\\telse\\n\\t\\troot[\\\"MyLib\\\"] = factory();\\n})(window, function() {\\nreturn \",\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 2);\\n\",\"\\nexport class LocationHelper {\\n\\n    public static calculateLocationKeyMaterial(latitude: number, longitude: number, toleranceDistance: number) {\\n\\n        if (latitude == null || longitude == null) {\\n            throw new Error('Location information has not been fetched.')\\n        }\\n\\n        let locationKeyMaterial = this.includeToleranceDistance(latitude, longitude, toleranceDistance)\\n        console.log(\\\"key derivation function input should be: \\\" + locationKeyMaterial)\\n\\n        return locationKeyMaterial\\n    }\\n\\n    public static includeToleranceDistance(latitude: number, longitude: number, toleranceDistance: number): string {\\n        let isNorth = false\\n        let isWest = false\\n\\n        // location sign is decided(N,W,E,S) and location value is made positive \\n        if (latitude < 0) {\\n            latitude = latitude * -1\\n        } else {\\n            isNorth = true\\n        }\\n\\n        if (longitude < 0) {\\n            longitude = longitude * -1\\n            isWest = true\\n        }\\n\\n        //location is converted to required format(Degrees DecimalMinutes)\\n        latitude = this.convertToDegreesDecimalMinutes(latitude)\\n        longitude = this.convertToDegreesDecimalMinutes(longitude)\\n\\n        latitude = latitude * 10000\\n        longitude = longitude * 10000\\n\\n        //calculate the latitude part\\n        if (isNorth) {\\n            latitude = Math.floor(latitude / (toleranceDistance * 5.4))\\n            latitude = this.includeLocationSignBits(latitude, true)\\n        } else {\\n            latitude = Math.floor(latitude / (toleranceDistance * 5.4))\\n            latitude = this.includeLocationSignBits(latitude, false)\\n        }\\n\\n        //calculate the longitude part\\n        if (isWest) {\\n            longitude = Math.floor(longitude / (toleranceDistance * 6))\\n            longitude = this.includeLocationSignBits(longitude, true)\\n        } else {\\n            longitude = Math.floor(longitude / (toleranceDistance * 6))\\n            longitude = this.includeLocationSignBits(longitude, false)\\n        }\\n\\n        return latitude.toString() + longitude.toString()\\n    }\\n\\n    //converts from Decimal Degrees to Degrees Decimal Minutes\\n    public static convertToDegreesDecimalMinutes(locationValue: number): number {\\n        let locationValueDegrees = Math.floor(locationValue)\\n        let locationValueDecimal = parseFloat(((locationValue % 1) * 60).toFixed(5).substring(0, 7))\\n        let result = parseFloat(locationValueDegrees.toString() + locationValueDecimal.toString())\\n        return result\\n    }\\n\\n    public static includeLocationSignBits(locationValue: number, isNorthOrWest: Boolean): number {\\n        let firstBit = 1 << 27\\n        let secondBit = 1 << 26\\n\\n        //if nort or west put \\\"11\\\"\\n        if (isNorthOrWest) {\\n            return firstBit + secondBit + locationValue\\n        }\\n        //else put \\\"10\\\"\\n        else {\\n            return firstBit + locationValue\\n        }\\n    }\\n\\n    public static createLocationMaterials(latitude: number, longitude: number, toleranceDistance: number): String[] {\\n        let isNorth = false\\n        let isWest = false\\n        let quadrantsList = new Array<String>()\\n        let leftLatitudeQuadrant: number\\n        let rightLatitudeQuadrant: number\\n        let leftLongitudeQuadrant: number\\n        let rightLongitudeQuadrant: number\\n\\n        //location sign is decided and location values are changed to be positive\\n        if (latitude < 0) {\\n            latitude = latitude * -1\\n        } else if (latitude > 0) {\\n            isNorth = true\\n        }\\n\\n        if (longitude < 0) {\\n            longitude = longitude * -1\\n            isWest = true\\n        }\\n\\n        //location is converted to required format(Degrees DecimalMinutes)\\n        latitude = this.convertToDegreesDecimalMinutes(latitude)\\n        longitude = this.convertToDegreesDecimalMinutes(longitude)\\n\\n        latitude = latitude * 10000\\n        longitude = longitude * 10000\\n\\n\\n        //calculate the latitude parts\\n        if (isNorth) {\\n            //actual latitude\\n            latitude = Math.floor(latitude / (toleranceDistance * 5.4))\\n            let center = latitude\\n            latitude = this.includeLocationSignBits(latitude, true)\\n\\n            //get the left quadrant\\n            leftLatitudeQuadrant = center - 1\\n            leftLatitudeQuadrant = this.includeLocationSignBits(leftLatitudeQuadrant, true)\\n\\n            //get the right quadrant\\n            rightLatitudeQuadrant = center + 1\\n            rightLatitudeQuadrant = this.includeLocationSignBits(rightLatitudeQuadrant, true)\\n\\n        } else {\\n            //actualy latitude\\n            latitude = Math.floor(latitude / (toleranceDistance * 5.4))\\n            let center = latitude\\n            latitude = this.includeLocationSignBits(latitude, false)\\n\\n            //get the left quadrant\\n            leftLatitudeQuadrant = center - 1\\n            leftLatitudeQuadrant = this.includeLocationSignBits(leftLatitudeQuadrant, false)\\n\\n            //get the right quadrant\\n            rightLatitudeQuadrant = center + 1\\n            rightLatitudeQuadrant = this.includeLocationSignBits(rightLatitudeQuadrant, false)\\n        }\\n\\n        //calculate the longitude parts\\n        if (isWest) {\\n            //actual longtitude\\n            longitude = Math.floor(longitude / (toleranceDistance * 6))\\n            let center = longitude\\n            longitude = this.includeLocationSignBits(longitude, true)\\n\\n            // get the left quadrant\\n            leftLongitudeQuadrant = center - 1\\n            leftLongitudeQuadrant = this.includeLocationSignBits(leftLongitudeQuadrant, true)\\n\\n            //get the right quadrant\\n            rightLongitudeQuadrant = center + 1\\n            rightLongitudeQuadrant = this.includeLocationSignBits(rightLongitudeQuadrant, true)\\n\\n        } else {\\n            //actual longitude\\n            longitude = Math.floor(longitude / (toleranceDistance * 6))\\n            let center = longitude\\n            longitude = this.includeLocationSignBits(longitude, false)\\n            //get the left quadrant\\n            leftLongitudeQuadrant = center - 1\\n            leftLongitudeQuadrant = this.includeLocationSignBits(leftLongitudeQuadrant, false)\\n            //get the right quadrant\\n            rightLongitudeQuadrant = center + 1\\n            rightLongitudeQuadrant = this.includeLocationSignBits(rightLongitudeQuadrant, false)\\n        }\\n\\n        //initialize arrays with possible values\\n        quadrantsList[0] = leftLatitudeQuadrant.toString() + leftLongitudeQuadrant.toString()\\n        quadrantsList[1] = leftLatitudeQuadrant.toString() + longitude.toString()\\n        quadrantsList[2] = leftLatitudeQuadrant.toString() + rightLongitudeQuadrant.toString()\\n        quadrantsList[3] = latitude.toString() + leftLongitudeQuadrant.toString()\\n        quadrantsList[4] = latitude.toString() + longitude.toString()\\n        quadrantsList[5] = latitude.toString() + rightLongitudeQuadrant.toString()\\n        quadrantsList[6] = rightLatitudeQuadrant.toString() + leftLongitudeQuadrant.toString()\\n        quadrantsList[7] = rightLatitudeQuadrant.toString() + longitude.toString()\\n        quadrantsList[8] = rightLatitudeQuadrant.toString() + rightLongitudeQuadrant.toString()\\n        \\n        return quadrantsList\\n    }\\n}\",\"import { LocationHelper } from \\\"./LocationHelper\\\";\\n\\nexport class Location {\\n  private latitude: number\\n  private longitude: number\\n\\n  constructor(latitude: number, longitude: number) {\\n    this.latitude = parseFloat(latitude.toFixed(6))\\n    this.longitude = parseFloat(longitude.toFixed(6))\\n    console.log(this.latitude)\\n    console.log(this.longitude)\\n  }\\n\\n  //creates an input for key derivation function of the sender\\n  public createLocationKeyMaterial(toleranceDistance: number) {\\n    let locationKeyMaterial = LocationHelper.calculateLocationKeyMaterial(this.latitude, this.longitude, toleranceDistance)\\n    return locationKeyMaterial\\n  }\\n\\n  //creates an array of inputs with neighbour quadrants of the receiver\\n  public createLocationKeyMaterials(toleranceDistance: number) {\\n    let locationKeyMaterials = LocationHelper.createLocationMaterials(this.latitude, this.longitude, toleranceDistance)\\n    return locationKeyMaterials\\n  }\\n}\\n\",\"import {Location} from './Location'\\n\\nlet a = new Location(10,29)\\n\\nexport function start() {\\n  return  a.createLocationKeyMaterial(5)\\n}\\n\\nexport function deneme() {\\n    console.log(\\\"ahmet\\\")\\n}\\n\\nconsole.log(\\\"calısıyir\\\")\\n\"]}","code":"!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(\"MyLib\",[],e):\"object\"==typeof exports?exports.MyLib=e():t.MyLib=e()}(window,function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)i.d(n,o,function(e){return t[e]}.bind(null,o));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p=\"\",i(i.s=2)}([function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=function(){function t(){}return t.calculateLocationKeyMaterial=function(t,e,i){if(null==t||null==e)throw new Error(\"Location information has not been fetched.\");var n=this.includeToleranceDistance(t,e,i);return console.log(\"key derivation function input should be: \"+n),n},t.includeToleranceDistance=function(t,e,i){var n=!1,o=!1;return t<0?t*=-1:n=!0,e<0&&(e*=-1,o=!0),t=this.convertToDegreesDecimalMinutes(t),e=this.convertToDegreesDecimalMinutes(e),t*=1e4,e*=1e4,n?(t=Math.floor(t/(5.4*i)),t=this.includeLocationSignBits(t,!0)):(t=Math.floor(t/(5.4*i)),t=this.includeLocationSignBits(t,!1)),o?(e=Math.floor(e/(6*i)),e=this.includeLocationSignBits(e,!0)):(e=Math.floor(e/(6*i)),e=this.includeLocationSignBits(e,!1)),t.toString()+e.toString()},t.convertToDegreesDecimalMinutes=function(t){var e=Math.floor(t),i=parseFloat((t%1*60).toFixed(5).substring(0,7));return parseFloat(e.toString()+i.toString())},t.includeLocationSignBits=function(t,e){return e?201326592+t:(1<<27)+t},t.createLocationMaterials=function(t,e,i){var n,o,r,c,a=!1,u=!1,l=new Array;if(t<0?t*=-1:t>0&&(a=!0),e<0&&(e*=-1,u=!0),t=this.convertToDegreesDecimalMinutes(t),e=this.convertToDegreesDecimalMinutes(e),t*=1e4,e*=1e4,a){var s=t=Math.floor(t/(5.4*i));t=this.includeLocationSignBits(t,!0),n=s-1,n=this.includeLocationSignBits(n,!0),o=s+1,o=this.includeLocationSignBits(o,!0)}else{s=t=Math.floor(t/(5.4*i));t=this.includeLocationSignBits(t,!1),n=s-1,n=this.includeLocationSignBits(n,!1),o=s+1,o=this.includeLocationSignBits(o,!1)}if(u){s=e=Math.floor(e/(6*i));e=this.includeLocationSignBits(e,!0),r=s-1,r=this.includeLocationSignBits(r,!0),c=s+1,c=this.includeLocationSignBits(c,!0)}else{s=e=Math.floor(e/(6*i));e=this.includeLocationSignBits(e,!1),r=s-1,r=this.includeLocationSignBits(r,!1),c=s+1,c=this.includeLocationSignBits(c,!1)}return l[0]=n.toString()+r.toString(),l[1]=n.toString()+e.toString(),l[2]=n.toString()+c.toString(),l[3]=t.toString()+r.toString(),l[4]=t.toString()+e.toString(),l[5]=t.toString()+c.toString(),l[6]=o.toString()+r.toString(),l[7]=o.toString()+e.toString(),l[8]=o.toString()+c.toString(),l},t}();e.LocationHelper=n},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=i(0),o=function(){function t(t,e){this.latitude=parseFloat(t.toFixed(6)),this.longitude=parseFloat(e.toFixed(6)),console.log(this.latitude),console.log(this.longitude)}return t.prototype.createLocationKeyMaterial=function(t){return n.LocationHelper.calculateLocationKeyMaterial(this.latitude,this.longitude,t)},t.prototype.createLocationKeyMaterials=function(t){return n.LocationHelper.createLocationMaterials(this.latitude,this.longitude,t)},t}();e.Location=o},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=new(i(1).Location)(10,29);e.start=function(){return n.createLocationKeyMaterial(5)},e.deneme=function(){console.log(\"ahmet\")},console.log(\"calısıyir\")}])});","extractedComments":[]}